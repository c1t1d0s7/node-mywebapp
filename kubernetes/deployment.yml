---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-myweb-deploy
  labels:
    app: node-myweb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-myweb
  template:
    metadata:
      labels:
        app: node-myweb
        env: development
      annotations:
        imageregistry: "ghcr.io/c1t1d0s7/node-myweb:latest"
    spec:
      containers:
      - name: node-myweb
        image: ghcr.io/c1t1d0s7/node-myweb
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: node-myweb-configmap
        ports:
        - name: http
          containerPort: 3000
        resources:
          limits:
            cpu: "500m"
            memory: "128M"
          requests:
            cpu: "250m"
            memory: "64M"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-myapp-deploy
  labels:
    app: node-myapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: node-myapp
  template:
    metadata:
      labels:
        app: node-myapp
        env: development
      annotations:
        imageregistry: "ghcr.io/c1t1d0s7/node-myapp:latest"
    spec:
      serviceAccountName: read-pod-sa
      containers:
      - name: node-myapp
        image: ghcr.io/c1t1d0s7/node-myapp
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
        resources:
          limits:
            cpu: "500m"
            memory: "128M"
          requests:
            cpu: "250m"
            memory: "64M"
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 3000
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: 3000
        envFrom:
        - configMapRef:
            name: node-myapp-configmap
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_SERVICE_ACCOUNT_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: CPU_REQUEST
          valueFrom:
            resourceFieldRef:
              containerName: node-myapp
              resource: requests.cpu
        - name: CPU_LIMIT
          valueFrom:
            resourceFieldRef:
              containerName: node-myapp
              resource: limits.cpu
        - name: MEMORY_REQUEST
          valueFrom:
            resourceFieldRef:
              containerName: node-myapp
              resource: requests.memory
        - name: MEMORY_LIMIT
          valueFrom:
            resourceFieldRef:
              containerName: node-myapp
              resource: limits.memory
        volumeMounts:
          - name: podinfo
            mountPath: /etc/podinfo
      volumes:
      - name: podinfo
        downwardAPI:
          items:
          - path: "labels"
            fieldRef:
              fieldPath: metadata.labels
          - path: "annotations"
            fieldRef:
              fieldPath: metadata.annotations
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-mydiary-deploy
  labels:
    app: node-mydiary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-mydiary
  template:
    metadata:
      labels:
        app: node-mydiary
        env: development
      annotations:
        imageregistry: "ghcr.io/c1t1d0s7/node-mydiary:latest"
    spec:
      containers:
      - name: node-mydiary
        image: ghcr.io/c1t1d0s7/node-mydiary
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: node-mydiary-configmap
        - secretRef:
            name: node-mydiary-secret
        ports:
        - name: http
          containerPort: 3000
        resources:
          limits:
            cpu: "500m"
            memory: "128M"
          requests:
            cpu: "250m"
            memory: "64M"
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 3000
        readinessProbe:
          httpGet:
            path: /healthcheck/database
            port: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-myweather-deploy
  labels:
    app: node-myweather
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-myweather
  template:
    metadata:
      labels:
        app: node-myweather
        env: development
      annotations:
        imageregistry: "ghcr.io/c1t1d0s7/node-myweather:latest"
    spec:
      containers:
      - name: node-myweather
        image: ghcr.io/c1t1d0s7/node-myweather
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: node-myweather-configmap
        ports:
        - name: http
          containerPort: 3000
        resources:
          limits:
            cpu: "500m"
            memory: "128M"
          requests:
            cpu: "250m"
            memory: "64M"